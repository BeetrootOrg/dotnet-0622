/*
 1) що таке метод:
  це частина коду яка має певне імя, і виконує пувну дію. якщо метод повертає результат своєї роботи то це функція а іначкш еце посуті процедура
  щоб метод нічого не поверта потрібно перед його назвою вказати параметр void -посуті вказавши цим самим що це процедура
  метод має може мати параметри які в ього будуть передані з іншої частини програми, а можна і без параметрів. загалом складається з сигнатури(назва і параметри) і 
  тіла(це сам його ко який буде виконуватися всередині метода)

 2) навіщо він взагалі потрібен 
  частіше для того щоб не писати однакові частини коду в різних місця для виконання однотипних дій. 
  написали метод один раз і в різних частинах просто його викликаємо з різними параметрами для того щоб він виконав дію і повернув результат.
*/

//як оголосити метод
static void HelloWord()
{
    System.Console.WriteLine("HelloWorld");
}
// і ось як викликати цей метод HelloWord - просто написати його імя. в даному випадку це посуті метод процедура(нічого не повертає а просто відпрацьовує тіло методу), без параметрів також.
HelloWord();


// далі як викликати метод з параметрами і як він виглядає
static void HelloToSomeBody(string somebody)
{
    System.Console.WriteLine($"Hello, {somebody}");// така конструкція означає що до коми виведеться як текст посуті, а що після коми в дужках то посуті виведе значення змінної
    // результат виводу буде HelloDima якщо в змінній містилось Dima
}
// також оскільки метод цей всього одну строку в тілі виконує то його можна записати в іншому форматі 
// static void HelloToSomeBody(string somebody) => System.Console.WriteLine($"Hello, {somebody}"); // тут все те саме буде просто одною строкою

//і виклик цього методу HelloToSomebody з параметром в якому ми передамо просто слова Dima
HelloToSomeBody("Dima");

// ось приклад простого метода(функціі, тобото метод який поверне якийсь резуьтат своєї роботи)

static int Square(int x)
{
    return x * x; // return це ключове слово дл яфункціі яке означає повернути саме те що написано в цьому місці(тобто значення перемінної чи якоїсь інш дії)
}

// і виклик цього метода з переданим в нього параметром який посуті наш метод має обрахувати
Square(3);

